From: =?utf-8?q?Martin_Stegh=C3=B6fer?= <martin@steghoefer.eu>
Date: Sat, 12 Apr 2014 15:19:48 +0200
Subject: Fix compilation: FFmpeg/Libav
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

Author: Martin Stegh√∂fer <martin@steghoefer.eu>
Forwarded: not-needed

Update the code to drop the use of deprecated functions/constants:
* Add AV_ prefix to CODEC_ID_MP3 and CODEC_ID_AC3.
* The function avcodec_alloc_frame was deprecated in favor of av_frame_alloc.
  The corresponding deallocation function is av_frame_free (not the generic
  av_free).

These changes have originally been introduced to make karlyriceditor work with
Debian's Libav (instead of FFmpeg, which is used by upstream). Now that FFmpeg
is back in Debian, only those changes that remove the use of deprecated
API features are kept.
---
 src/audioplayerprivate.cpp |  4 ++--
 src/ffmpegvideodecoder.cpp |  4 ++--
 src/ffmpegvideoencoder.cpp | 18 +++++++++---------
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/audioplayerprivate.cpp b/src/audioplayerprivate.cpp
index 1b6b32d..a6536cd 100644
--- a/src/audioplayerprivate.cpp
+++ b/src/audioplayerprivate.cpp
@@ -118,7 +118,7 @@ void AudioPlayerPrivate::close()
 	}
 
 	if ( m_frame )
-		av_free( m_frame );
+		av_frame_free( &m_frame );
 
 	m_frame = 0;
 	pFormatCtx = 0;
@@ -227,7 +227,7 @@ bool AudioPlayerPrivate::open( const QString& filename )
 	}
 
 	// Allocate the buffer
-	m_frame = avcodec_alloc_frame();
+	m_frame = av_frame_alloc();
 
 	if ( !m_frame )
 	{
diff --git a/src/ffmpegvideodecoder.cpp b/src/ffmpegvideodecoder.cpp
index 2ec5969..9befe43 100644
--- a/src/ffmpegvideodecoder.cpp
+++ b/src/ffmpegvideodecoder.cpp
@@ -139,10 +139,10 @@ bool FFMpegVideoDecoder::openFile( const QString& filename, unsigned int seekto
 	}
 
 	// Allocate video frame
-	d->pFrame = avcodec_alloc_frame();
+	d->pFrame = av_frame_alloc();
 
 	// Allocate an AVFrame structure
-	d->pFrameRGB = avcodec_alloc_frame();
+	d->pFrameRGB = av_frame_alloc();
 
 	if ( !d->pFrame || !d->pFrameRGB )
 	{
diff --git a/src/ffmpegvideoencoder.cpp b/src/ffmpegvideoencoder.cpp
index 49182b5..7199b86 100644
--- a/src/ffmpegvideoencoder.cpp
+++ b/src/ffmpegvideoencoder.cpp
@@ -174,10 +174,10 @@ bool FFMpegVideoEncoderPriv::close()
 	delete[] audioSampleBuffer;
 
 	if ( videoFrame )
-		av_free(videoFrame);
+		av_frame_free( &videoFrame );
 
 	if ( audioFrame )
-		av_free( audioFrame );
+		av_frame_free( &audioFrame );
 
 	outputFormatCtx = 0;
 	outputFormat = 0;
@@ -425,10 +425,10 @@ av_log_set_level(AV_LOG_VERBOSE);
 			// We're copying the stream
 			memcpy( newCtx, m_aplayer->aCodecCtx, sizeof(AVCodecContext) );
 
-			if ( newCtx->block_align == 1 && newCtx->codec_id == CODEC_ID_MP3 )
+			if ( newCtx->block_align == 1 && newCtx->codec_id == AV_CODEC_ID_MP3 )
 				newCtx->block_align= 0;
 
-			if ( newCtx->codec_id == CODEC_ID_AC3 )
+			if ( newCtx->codec_id == AV_CODEC_ID_AC3 )
 				newCtx->block_align= 0;
 		}
 		else
@@ -443,7 +443,7 @@ av_log_set_level(AV_LOG_VERBOSE);
 			}
 
 			// Hack to use the fixed AC3 codec if available
-			if ( audioCodec->id == CODEC_ID_AC3 && avcodec_find_encoder_by_name( "ac3_fixed" ) )
+			if ( audioCodec->id == AV_CODEC_ID_AC3 && avcodec_find_encoder_by_name( "ac3_fixed" ) )
 				audioCodec = avcodec_find_encoder_by_name( "ac3_fixed" );
 
 			// Allocate the audio context
@@ -544,7 +544,7 @@ av_log_set_level(AV_LOG_VERBOSE);
 				goto cleanup;
 			}
 
-			audioFrame = avcodec_alloc_frame();
+			audioFrame = av_frame_alloc();
 
 			if ( !audioFrame )
 			{
@@ -573,10 +573,10 @@ av_log_set_level(AV_LOG_VERBOSE);
 				goto cleanup;
 			}
 
-			if ( audioStream->codec->block_align == 1 && audioStream->codec->codec_id == CODEC_ID_MP3 )
+			if ( audioStream->codec->block_align == 1 && audioStream->codec->codec_id == AV_CODEC_ID_MP3 )
 				audioStream->codec->block_align= 0;
 
-			if ( audioStream->codec->codec_id == CODEC_ID_AC3 )
+			if ( audioStream->codec->codec_id == AV_CODEC_ID_AC3 )
 				audioStream->codec->block_align= 0;
 		}
 
@@ -595,7 +595,7 @@ av_log_set_level(AV_LOG_VERBOSE);
 	}
 
 	// Allocate the YUV frame
-	videoFrame = avcodec_alloc_frame();
+	videoFrame = av_frame_alloc();
 
 	if ( !videoFrame )
 	{

From: =?utf-8?q?Martin_Stegh=C3=B6fer?= <martin@steghoefer.eu>
Date: Sat, 10 May 2014 01:04:56 +0200
Subject: Fix segfault: AVFrame initialization (Libav/FFmpeg)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

Author: Martin Stegh√∂fer <martin@steghoefer.eu>
Forwarded: not-needed

Remove the use of the deprecated function avcodec_get_frame_defaults.
Instead, call avcodec_alloc_frame(), which allocates the memory, initializes
it to zero and then calls avcodec_get_frame_defaults itself. This involves
changing "srcaudio" from a stack object to a heap object and freeing it after
use.

These changes have originally been introduced to make karlyriceditor work with
Debian's Libav (instead of FFmpeg, which is used by upstream). Now that FFmpeg
is back in Debian, only those changes that remove the use of deprecated
API features are kept.
---
 src/ffmpegvideoencoder.cpp | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/src/ffmpegvideoencoder.cpp b/src/ffmpegvideoencoder.cpp
index 7199b86..a8202e3 100644
--- a/src/ffmpegvideoencoder.cpp
+++ b/src/ffmpegvideoencoder.cpp
@@ -681,12 +681,11 @@ int FFMpegVideoEncoderPriv::encodeImage( const QImage &img, qint64 )
 			}
 
 			// Initialize the frame
-			AVFrame srcaudio;
-			avcodec_get_frame_defaults( &srcaudio );
+			AVFrame *srcaudio = av_frame_alloc();
 
 			// Decode the original audio into the srcaudio frame
 			int got_audio;
-			err = avcodec_decode_audio4( m_aplayer->aCodecCtx, &srcaudio, &got_audio, &pkt );
+			err = avcodec_decode_audio4( m_aplayer->aCodecCtx, srcaudio, &got_audio, &pkt );
 
 			if ( err < 0 )
 			{
@@ -706,9 +705,9 @@ int FFMpegVideoEncoderPriv::encodeImage( const QImage &img, qint64 )
 											NULL,
 											0,
 											0,
-											srcaudio.data,
+											srcaudio->data,
 											0,
-											srcaudio.nb_samples )) < 0 )
+											srcaudio->nb_samples )) < 0 )
 			{
 				qWarning( "Error resampling decoded audio: %d", err );
 				return -1;
@@ -769,6 +768,8 @@ int FFMpegVideoEncoderPriv::encodeImage( const QImage &img, qint64 )
 					av_free_packet( &pkt );
 				}
 			}
+
+			av_frame_free( &srcaudio );
 		}
 	}
 
